TODO:

- all create() and update() functions ignore values in unrelated/unused fields
  [DONE]

- Remove all idLength constants
  Any comparison with idLength should be replaced with proper UUID validation
  e.g. validateAuthority()
  [DONE]

- PersistentSessionService should understand more about business logic
  Not just a dumb data layer service
  - create() should return full object instead of just ID string
    [DONE]
  - create() should only take in userAccountId and roles; everything else is
    internally generated
    [DONE]
  - Input string arguments: validate specific string lengths and allowed chars
    [DONE]
  - Controller should expect above changes
    [DONE]
  - Tests should expect above changes
    [DONE]
  - Clients should expect above changes

- UserAccountService should understand more about business logic
  Not just a dumb data layer service
  - UserAccount model should include (plain) password field
    [DONE]
  - create() should return full object instead of just ID string
    erase passwordHash and passwordSalt if authority doesn't have System role
    [DONE]
  - create() should only take in name, password, and roles; everything else is
    internally generated
    [DONE]
  - update() should return full object instead of void
    erase passwordHash and passwordSalt if authority doesn't have System role
    [DONE]
  - update() should only take in name, password, and roles; everything else is
    internally generated
    [DONE]
  - readById() and readByName() should erase passwordHash and passwordSalt if
    authority doesn't have System role
    [DONE]
  - Input string arguments: validate specific string lengths and allowed chars
    [DONE]
  - Controller should expect above changes
    [DONE]
  - Tests should expect above changes
    [DONE]
  - Clients should expect above changes

- IdentificationService, LoginService, and LogoutService should be updated to
  reflect above changes

- every service controller should expose the same API format
  invoke(functionName, authority, arguments)
  functionName: string
  authority (optional): {
    id: string (36 characters) (optional)
    roles: number (unsigned 8-bit integer) (optional)
    authTime: number (unsigned 32-bit integer) (optional)
  }
  arguments: [any] (optional)


Test entry for PersistentSessions table:

insert into PersistentSessions values (
  '00000000-0000-0000-0000-000000000000',
  '00000000-0000-0000-0000-000000000000',
  6,
  '00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  0,
  4294967295
);

Test entry for UserAccount table:

insert into UserAccounts values (
  '00000000-0000-0000-0000-000000000000',
  'qwer',
  'bbf55461cbb04963ee7347e5e014f76defa26a8af960be40e644f4f204ddc7a3',
  '00000000000000000000000000000000',
  6
);
